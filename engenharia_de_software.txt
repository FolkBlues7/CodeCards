* O que é o Manifesto Ágil? : Um documento que estabelece os 4 valores e 12 princípios fundamentais para o desenvolvimento de software ágil. #
* Qual a principal diferença entre os modelos Waterfall (Cascata) e Ágil? : Waterfall é um modelo sequencial e linear, onde uma fase só começa após a anterior terminar, enquanto o Ágil é iterativo e incremental, entregando valor em ciclos curtos. #
* O que significa a sigla SOLID no contexto de programação orientada a objetos? : É um acrônimo para cinco princípios de design: Single Responsibility (Responsabilidade Única), Open/Closed (Aberto/Fechado), Liskov Substitution (Substituição de Liskov), Interface Segregation (Segregação de Interface) e Dependency Inversion (Inversão de Dependência). #
* Para que serve um sistema de controle de versão como o Git? : Para gerenciar e rastrear o histórico de alterações no código-fonte, facilitando o trabalho colaborativo, a criação de ramos (branches) para novas funcionalidades e a recuperação de versões anteriores. #
* O que é um "code review"? : É a prática de submeter o código-fonte a uma revisão sistemática por outros desenvolvedores para encontrar bugs, melhorar a qualidade geral do código e compartilhar conhecimento dentro da equipe. #
* Defina o que é "Débito Técnico". : É uma metáfora que representa o custo implícito de retrabalho futuro causado por escolher uma solução fácil e rápida agora, em vez de usar uma abordagem melhor que levaria mais tempo. #
* Qual o objetivo dos testes de unidade? : Verificar se as menores partes de uma aplicação (as "unidades", como funções ou métodos) se comportam como esperado de forma isolada do resto do sistema. #
* O que são os padrões de projeto (Design Patterns)? : Soluções gerais, testadas e reutilizáveis para problemas que ocorrem com frequência no desenvolvimento de software, servindo como um modelo para resolver questões de design. #
* Qual o papel de um Scrum Master em um time Scrum? : Atuar como um líder-servidor e facilitador, garantindo que o time siga as práticas do Scrum, removendo impedimentos e protegendo o time de distrações externas. #
* O que é Integração Contínua (CI - Continuous Integration)? : A prática de automatizar a integração de alterações de código de múltiplos desenvolvedores em um único repositório de software, seguida por um processo automático de build e testes para detectar problemas rapidamente. #